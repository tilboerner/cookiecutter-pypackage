[aliases]
test = pytest

[bumpversion]
current_version = {{ cookiecutter.version }}
commit = True
tag = True

[bumpversion:file:pyproject.toml]
search = version = "{current_version}"
replace = version = "{new_version}"

[bumpversion:file:src/{{ cookiecutter.project_slug }}/__init__.py]
search = __version__ = '{current_version}'
replace = __version__ = '{new_version}'


[tool:pytest]
norecursedirs = .venv .tox .eggs
collect_ignore = ['setup.py']
addopts =

[flake8]
exclude = docs,.venv,.tox,.eggs,setup.py
max-line-length = {{ cookiecutter.line_length }}
show-source = true
statistics = true
ignore =
    ; missing whitespace after ',':
    E231,
    ; line break before binary operator:
    W503,

[pydocstyle]
add_ignore = D1,D400,D413
match = (?!setup).*.py
match-dir = (?!test|\.venv|docs|\.).*

[coverage:run]
source = {{ cookiecutter.project_slug }}
branch = False
omit =
    .tox
    ./setup.py
    .venv
    docs

[coverage:report]
fail_under = 95
skip_covered = True
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

[isort]
atomic = True
combine_as_imports = true
line_length = {{ cookiecutter.line_length }}
skip = docs,.venv,.tox,.eggs,setup.py
not_skip = __init__.py
known_first_party = {{ cookiecutter.project_slug }},tests
default_section=THIRDPARTY
# black interop:
multi_line_output = 3
include_trailing_comma = true
